name: YOLO Build Prod
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.save-image.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      
      - name: Build and push Docker image with curl
        run: |
          # Clean the username by removing any whitespace/newlines
          DOCKER_USERNAME=$(echo "${{ secrets.DOCKERHUB_USERNAME }}" | tr -d '[:space:]')
          RUN_NUMBER="${{ github.run_number }}"
          
          if [ -z "$DOCKER_USERNAME" ]; then
            echo "❌ DOCKERHUB_USERNAME is not set"
            exit 1
          fi
          
          BASE_IMAGE="${DOCKER_USERNAME}/yolo-prod-base:${RUN_NUMBER}"
          IMAGE_NAME="${DOCKER_USERNAME}/yolo-prod:${RUN_NUMBER}"
          
          echo "🔧 Building base image: $BASE_IMAGE"
          docker build -t "$BASE_IMAGE" .
      
          echo "🔧 Creating patched Dockerfile with curl"
          cat > Dockerfile.patched << EOL
FROM $BASE_IMAGE
RUN apt-get update && apt-get install -y curl
EOL
      
          echo "🔧 Building final image with curl: $IMAGE_NAME"
          docker build -t "$IMAGE_NAME" -f Dockerfile.patched .
      
          echo "📤 Pushing final image to DockerHub"
          docker push "$IMAGE_NAME"
      
          echo "$IMAGE_NAME" > image_name.txt
      
      - name: Save image name as output
        id: save-image
        run: |
          IMAGE_NAME=$(cat image_name.txt)
          echo "image=$IMAGE_NAME" >> "$GITHUB_OUTPUT"
          echo "✅ Saved image output: $IMAGE_NAME"
      
      - name: Upload image name as artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-name
          path: image_name.txt
          
  deploy:
    needs: build
    uses: ./.github/workflows/deploy-prod.yaml
    with:
      image: ${{ needs.build.outputs.image }}
    secrets:
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      S3_BUCKET_NAME_PROD: ${{ secrets.S3_BUCKET_NAME_PROD }}
