name: Yolo Test

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH for Testing
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          echo "Host ec2
            HostName ${EC2_HOST}
            User ${EC2_USER}
            IdentityFile ~/.ssh/private_key
            StrictHostKeyChecking no" > ~/.ssh/config

      - name: Clean Untracked Files and Setup Environment on EC2
        run: |
          ssh ec2 '
            if [ -d "$REPO_NAME" ]; then
              cd "$REPO_NAME" && git fetch origin && git reset --hard origin/main
            else
              git clone "$REPO_URL"
              cd "$REPO_NAME"
            fi

            python3 -m venv .venv
            source .venv/bin/activate

            pip install --upgrade pip
            pip install -r torch-requirements.txt
            pip install -r requirements.txt
            pip install pytest
            pip install opencv-python numpy

            mkdir -p uploads/original uploads/predicted tests
            if [ ! -f tests/test_image.jpg ]; then
              echo "Creating a placeholder test image"
              python -c "import cv2, numpy as np; cv2.imwrite('tests/test_image.jpg', np.zeros((100, 100, 3), dtype=np.uint8))"
            fi
          '

      - name: Run Tests on EC2
        run: |
          ssh ec2 "
            cd $REPO_NAME
            source .venv/bin/activate
            pytest tests/test_app.py --disable-warnings -v
          "
