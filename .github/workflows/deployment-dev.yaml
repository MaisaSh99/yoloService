name: Yolo Deploy (Dev)

on:
  push:
    branches:
      - dev
  workflow_dispatch:

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH (Dev)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_DEV_HOST: ${{ secrets.EC2_DEV_HOST }}
          EC2_DEV_USER: ${{ secrets.EC2_DEV_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host ec2-dev
                HostName $EC2_DEV_HOST
                User $EC2_DEV_USER
                IdentityFile ~/.ssh/id_rsa
                StrictHostKeyChecking no" > ~/.ssh/config

      - name: Upload files to EC2 (Dev)
        run: |
          scp yolo-dev.service ec2-dev:~/yolo-dev.service

      - name: SSH Deploy Script (Dev)
        run: |
          ssh ec2-dev << 'EOF'
            echo "✅ Installing dependencies..."
            sudo apt update
            sudo apt install -y git python3 python3-pip python3-venv wget tar

            echo "📁 Setting up repo..."
            cd /home/ubuntu
            if [ -d "yoloService" ]; then
              cd yoloService
              git reset --hard
              git checkout dev
              git pull origin dev
            else
              git clone ${REPO_URL} yoloService
              cd yoloService
              git checkout dev
            fi

            echo "📦 Setting up Python environment..."
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate
            export S3_BUCKET_NAME="maisa-dev-bucket"
            pip install --upgrade pip
            pip install -r requirements.txt
            pip install boto3

            echo "🛠️ Installing OpenTelemetry Collector (binary)..."
            cd /tmp
            wget https://github.com/open-telemetry/opentelemetry-collector-releases/releases/download/v0.101.0/otelcol_0.101.0_linux_amd64.tar.gz
            tar -xvf otelcol_0.101.0_linux_amd64.tar.gz
            sudo mv otelcol /usr/local/bin/

            echo "⚙️ Configuring OpenTelemetry systemd service..."
            sudo mkdir -p /etc/otelcol
            sudo tee /etc/systemd/system/otelcol.service > /dev/null <<EOL
            [Unit]
            Description=OpenTelemetry Collector
            After=network.target
            
            [Service]
            ExecStart=/usr/local/bin/otelcol --config /etc/otelcol/config.yaml
            Restart=always
            
            [Install]
            WantedBy=multi-user.target
            EOL
            
                        echo "⚙️ Creating dummy config.yaml"
                        sudo tee /etc/otelcol/config.yaml > /dev/null <<EOL
            receivers:
              hostmetrics:
                collection_interval: 30s
                scrapers:
                  cpu:
                  memory:
                  disk:
                  filesystem:
                  load:
                  network:
                  paging:
                  processes:
            
            exporters:
              logging:
                loglevel: info
            
            service:
              pipelines:
                metrics:
                  receivers: [hostmetrics]
                  exporters: [logging]
            EOL
            
                        sudo systemctl daemon-reload
                        sudo systemctl enable otelcol
                        sudo systemctl restart otelcol
            
                        echo "⚙️ Updating YOLO systemd service..."
                        sudo mv ~/yolo-dev.service /etc/systemd/system/yolo-dev.service
                        sudo systemctl daemon-reload
                        sudo systemctl restart yolo-dev.service
                        sudo systemctl enable yolo-dev.service
            
                        echo "✅ YOLO dev deployed with OpenTelemetry binary!"
                      EOF
