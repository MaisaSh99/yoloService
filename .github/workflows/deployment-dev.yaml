name: Deploy Yolo (Dev)

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  deploy-yolo-dev:
    name: Deploy YOLO Dev to EC2
    runs-on: ubuntu-latest

    env:
      PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_IP: ${{ secrets.EC2_DEV_HOST }}
      EC2_USER: ${{ secrets.EC2_DEV_USER }}
      REPO: ${{ github.repository }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Upload deployment files to Dev
        run: |
          scp -i key.pem -o StrictHostKeyChecking=no yolo-dev.service $EC2_USER@$EC2_IP:~/yolo-dev.service
          scp -i key.pem -o StrictHostKeyChecking=no otelcol-config.yaml $EC2_USER@$EC2_IP:~/otelcol-config.yaml
          scp -i key.pem -o StrictHostKeyChecking=no .github/scripts/install_otelcol.sh $EC2_USER@$EC2_IP:~/install_otelcol.sh
          scp -i key.pem -o StrictHostKeyChecking=no .github/scripts/install_prometheus.sh $EC2_USER@$EC2_IP:~/install_prometheus.sh

      - name: SSH and deploy on Dev
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << EOF
            set -e

            echo "✅ Installing dependencies..."
            sudo apt update
            sudo apt install -y git python3 python3-pip python3-venv wget curl tar unzip

            echo "📁 Cloning or updating repo..."
            cd /home/ubuntu
            if [ -d "yoloService" ]; then
              cd yoloService
              git reset --hard
              git checkout dev
              git pull origin dev
            else
              git clone https://github.com/${REPO}.git yoloService
              cd yoloService
              git checkout dev
            fi

            echo "🐍 Setting up virtual environment..."
            python3 -m venv venv
            source venv/bin/activate
            export S3_BUCKET_NAME="maisa-dev-bucket"
            pip install --upgrade pip
            pip install -r requirements.txt
            pip install boto3

            echo "📊 Installing OpenTelemetry & Prometheus..."
            chmod +x ~/install_otelcol.sh ~/install_prometheus.sh
            sudo mv ~/otelcol-config.yaml /etc/otelcol/config.yaml
            export OTELCOL_IP="$EC2_IP"
            sudo -E ~/install_otelcol.sh
            sudo -E ~/install_prometheus.sh

            echo "🛠️ Setting up YOLO dev systemd service..."
            sudo mv ~/yolo-dev.service /etc/systemd/system/yolo-dev.service
            sudo systemctl daemon-reload
            sudo systemctl enable yolo-dev.service
            sudo systemctl restart yolo-dev.service

            echo "✅ Dev YOLO deployment complete."
          EOF
